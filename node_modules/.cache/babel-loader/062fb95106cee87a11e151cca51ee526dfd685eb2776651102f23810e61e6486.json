{"ast":null,"code":"// firebaseAuth.js\nimport{getAuth,signInWithEmailAndPassword,createUserWithEmailAndPassword,signOut,onAuthStateChanged}from'firebase/auth';import{app}from'./firebase';// Import the initialized Firebase app\n// Get the Auth instance\nconst auth=getAuth(app);// Sign in with email and password\nexport const signIn=async(email,password)=>{try{const userCredential=await signInWithEmailAndPassword(auth,email,password);return userCredential.user;}catch(error){console.error('Sign-in error:',error);throw new Error(error.message);}};// Create a new user\nexport const signUp=async(email,password)=>{try{const userCredential=await createUserWithEmailAndPassword(auth,email,password);return userCredential.user;}catch(error){console.error('Sign-up error:',error);throw new Error(error.message);}};// Sign out the user\nexport const signOutUser=async()=>{try{await signOut(auth);}catch(error){console.error('Sign-out error:',error);throw new Error(error.message);}};// Set up a listener for auth state changes (e.g., when user signs in/out)\nexport const onAuthStateChangedListener=callback=>{return onAuthStateChanged(auth,callback);};","map":{"version":3,"names":["getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","app","auth","signIn","email","password","userCredential","user","error","console","Error","message","signUp","signOutUser","onAuthStateChangedListener","callback"],"sources":["/home/maxwell/dePartie/src/services/firebaseAuth.js"],"sourcesContent":["// firebaseAuth.js\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { app } from './firebase'; // Import the initialized Firebase app\n\n// Get the Auth instance\nconst auth = getAuth(app);\n\n// Sign in with email and password\nexport const signIn = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error('Sign-in error:', error);\n    throw new Error(error.message);\n  }\n};\n\n// Create a new user\nexport const signUp = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error('Sign-up error:', error);\n    throw new Error(error.message);\n  }\n};\n\n// Sign out the user\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error('Sign-out error:', error);\n    throw new Error(error.message);\n  }\n};\n\n// Set up a listener for auth state changes (e.g., when user signs in/out)\nexport const onAuthStateChangedListener = (callback) => {\n  return onAuthStateChanged(auth, callback);\n};"],"mappings":"AAAA;AACA,OAASA,OAAO,CAAEC,0BAA0B,CAAEC,8BAA8B,CAAEC,OAAO,CAAEC,kBAAkB,KAAQ,eAAe,CAChI,OAASC,GAAG,KAAQ,YAAY,CAAE;AAElC;AACA,KAAM,CAAAC,IAAI,CAAGN,OAAO,CAACK,GAAG,CAAC,CAEzB;AACA,MAAO,MAAM,CAAAE,MAAM,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CAC/C,GAAI,CACF,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAT,0BAA0B,CAACK,IAAI,CAAEE,KAAK,CAAEC,QAAQ,CAAC,CAC9E,MAAO,CAAAC,cAAc,CAACC,IAAI,CAC5B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtC,KAAM,IAAI,CAAAE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC,CAChC,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,MAAM,CAAG,KAAAA,CAAOR,KAAK,CAAEC,QAAQ,GAAK,CAC/C,GAAI,CACF,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAR,8BAA8B,CAACI,IAAI,CAAEE,KAAK,CAAEC,QAAQ,CAAC,CAClF,MAAO,CAAAC,cAAc,CAACC,IAAI,CAC5B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtC,KAAM,IAAI,CAAAE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC,CAChC,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,WAAW,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAd,OAAO,CAACG,IAAI,CAAC,CACrB,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC,KAAM,IAAI,CAAAE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC,CAChC,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,0BAA0B,CAAIC,QAAQ,EAAK,CACtD,MAAO,CAAAf,kBAAkB,CAACE,IAAI,CAAEa,QAAQ,CAAC,CAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}