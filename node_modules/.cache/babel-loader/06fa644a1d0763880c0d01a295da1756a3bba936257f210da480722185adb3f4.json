{"ast":null,"code":"// firebaseAuth.js\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { app } from './firebase'; // Import the initialized Firebase app\n\n// Get the Auth instance\nconst auth = getAuth(app);\n\n// Sign in with email and password\nexport const signIn = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error('Sign-in error:', error);\n    throw new Error(error.message);\n  }\n};\n\n// Create a new user\nexport const signUp = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error('Sign-up error:', error);\n    throw new Error(error.message);\n  }\n};\n\n// Sign out the user\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error('Sign-out error:', error);\n    throw new Error(error.message);\n  }\n};\n\n// Set up a listener for auth state changes (e.g., when user signs in/out)\nexport const onAuthStateChangedListener = callback => {\n  return onAuthStateChanged(auth, callback);\n};","map":{"version":3,"names":["getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","app","auth","signIn","email","password","userCredential","user","error","console","Error","message","signUp","signOutUser","onAuthStateChangedListener","callback"],"sources":["/home/maxwell/react-dePartie/src/services/firebaseAuth.js"],"sourcesContent":["// firebaseAuth.js\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { app } from './firebase'; // Import the initialized Firebase app\n\n// Get the Auth instance\nconst auth = getAuth(app);\n\n// Sign in with email and password\nexport const signIn = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error('Sign-in error:', error);\n    throw new Error(error.message);\n  }\n};\n\n// Create a new user\nexport const signUp = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error('Sign-up error:', error);\n    throw new Error(error.message);\n  }\n};\n\n// Sign out the user\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error('Sign-out error:', error);\n    throw new Error(error.message);\n  }\n};\n\n// Set up a listener for auth state changes (e.g., when user signs in/out)\nexport const onAuthStateChangedListener = (callback) => {\n  return onAuthStateChanged(auth, callback);\n};"],"mappings":"AAAA;AACA,SAASA,OAAO,EAAEC,0BAA0B,EAAEC,8BAA8B,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAChI,SAASC,GAAG,QAAQ,YAAY,CAAC,CAAC;;AAElC;AACA,MAAMC,IAAI,GAAGN,OAAO,CAACK,GAAG,CAAC;;AAEzB;AACA,OAAO,MAAME,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMT,0BAA0B,CAACK,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;IAC9E,OAAOC,cAAc,CAACC,IAAI;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;EAChC;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOR,KAAK,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMR,8BAA8B,CAACI,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;IAClF,OAAOC,cAAc,CAACC,IAAI;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;EAChC;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMd,OAAO,CAACG,IAAI,CAAC;EACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;EAChC;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,0BAA0B,GAAIC,QAAQ,IAAK;EACtD,OAAOf,kBAAkB,CAACE,IAAI,EAAEa,QAAQ,CAAC;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}