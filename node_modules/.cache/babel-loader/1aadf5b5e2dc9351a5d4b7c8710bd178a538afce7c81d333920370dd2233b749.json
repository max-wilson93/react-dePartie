{"ast":null,"code":"import React,{useState}from'react';import{fetchRecipe}from'../services/ai';// Adjust the path according to your structure\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AIRecipe=_ref=>{let{updateRecipes}=_ref;const[ingredients,setIngredients]=useState('');const[recipe,setRecipe]=useState(null);const[isLoading,setIsLoading]=useState(false);const parseRecipe=recipeText=>{// Split the recipe into parts based on known sections (title, ingredients, instructions)\nconst recipeParts=recipeText.split('Ingredients:');const titlePart=recipeParts[0].trim();const ingredientsPart=recipeParts[1].split('Instructions:')[0].trim();const instructionsPart=recipeParts[1].split('Instructions:')[1].trim();// Format the parsed recipe into an object\nreturn{name:titlePart.replace('Recipe:','').trim(),// Clean up the title\ningredients:ingredientsPart.split('\\n').map(ingredient=>ingredient.trim()).filter(Boolean),instructions:instructionsPart.split('\\n').map(instruction=>instruction.trim()).filter(Boolean)};};const handleGetRecipe=async()=>{if(!ingredients.trim()){alert('Please enter some ingredients.');return;}setIsLoading(true);setRecipe(null);// Clear previous recipe\ntry{const fetchedRecipe=await fetchRecipe(ingredients);// Fetch recipe from API\nconst structuredRecipe=parseRecipe(fetchedRecipe);// Parse the recipe into structured format\nsetRecipe(structuredRecipe);// Update state with the parsed recipe\n}catch(error){setRecipe('Failed to fetch recipe. Please try again.');}finally{setIsLoading(false);// Set loading state back to false\n}};const handleSaveRecipe=()=>{if(recipe){updateRecipes(recipe);// Save the recipe using the passed down function\n}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"AI Recipe Suggestions\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:ingredients,onChange:e=>setIngredients(e.target.value),placeholder:\"Enter ingredients (e.g., tomatoes, pasta)\",style:{width:'300px',padding:'10px',marginRight:'10px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGetRecipe,disabled:isLoading,style:styles.getRecipeButton,children:isLoading?'Generating...':'Get Recipe'})]}),recipe&&typeof recipe==='object'&&/*#__PURE__*/_jsxs(\"div\",{style:styles.recipeContainer,children:[/*#__PURE__*/_jsx(\"h2\",{children:recipe.name}),/*#__PURE__*/_jsxs(\"div\",{style:styles.recipeSection,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Ingredients:\"}),/*#__PURE__*/_jsx(\"ul\",{children:recipe.ingredients.map((ingredient,index)=>/*#__PURE__*/_jsx(\"li\",{style:styles.ingredient,children:ingredient},index))})]}),/*#__PURE__*/_jsxs(\"div\",{style:styles.recipeSection,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Instructions:\"}),recipe.instructions.map((step,index)=>/*#__PURE__*/_jsx(\"p\",{style:styles.instruction,children:step},index))]})]}),recipe&&typeof recipe==='string'&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',padding:'10px',background:'#ffe5b4',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Recipe:\"}),/*#__PURE__*/_jsx(\"p\",{children:recipe})]})]});};// Styles for AI Recipe Component\nconst styles={getRecipeButton:{padding:'10px 20px',fontSize:'16px',backgroundColor:'#3e2723',color:'#fff',border:'none',borderRadius:'5px',cursor:'pointer',margin:'10px'},recipeContainer:{marginTop:'20px',padding:'20px',background:'#ffe5b4',borderRadius:'10px',maxWidth:'600px',margin:'0 auto',textAlign:'left'},recipeSection:{marginBottom:'15px'},ingredient:{fontSize:'16px',color:'#3e2723'},instruction:{fontSize:'16px',color:'#3e2723',marginBottom:'10px'},saveButton:{padding:'10px 20px',fontSize:'16px',backgroundColor:'#3e2723',color:'#fff',border:'none',borderRadius:'5px',cursor:'pointer',marginTop:'20px'}};export default AIRecipe;","map":{"version":3,"names":["React","useState","fetchRecipe","jsx","_jsx","jsxs","_jsxs","AIRecipe","_ref","updateRecipes","ingredients","setIngredients","recipe","setRecipe","isLoading","setIsLoading","parseRecipe","recipeText","recipeParts","split","titlePart","trim","ingredientsPart","instructionsPart","name","replace","map","ingredient","filter","Boolean","instructions","instruction","handleGetRecipe","alert","fetchedRecipe","structuredRecipe","error","handleSaveRecipe","style","padding","textAlign","children","type","value","onChange","e","target","placeholder","width","marginRight","onClick","disabled","styles","getRecipeButton","recipeContainer","recipeSection","index","step","marginTop","background","borderRadius","fontSize","backgroundColor","color","border","cursor","margin","maxWidth","marginBottom","saveButton"],"sources":["/home/maxwell/dePartie/src/views/AIRecipe.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { fetchRecipe } from '../services/ai'; // Adjust the path according to your structure\n\nconst AIRecipe = ({ updateRecipes }) => {\n  const [ingredients, setIngredients] = useState('');\n  const [recipe, setRecipe] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const parseRecipe = (recipeText) => {\n    // Split the recipe into parts based on known sections (title, ingredients, instructions)\n    const recipeParts = recipeText.split('Ingredients:');\n    const titlePart = recipeParts[0].trim();\n    const ingredientsPart = recipeParts[1].split('Instructions:')[0].trim();\n    const instructionsPart = recipeParts[1].split('Instructions:')[1].trim();\n\n    // Format the parsed recipe into an object\n    return {\n      name: titlePart.replace('Recipe:', '').trim(),  // Clean up the title\n      ingredients: ingredientsPart.split('\\n').map(ingredient => ingredient.trim()).filter(Boolean),\n      instructions: instructionsPart.split('\\n').map(instruction => instruction.trim()).filter(Boolean),\n    };\n  };\n\n  const handleGetRecipe = async () => {\n    if (!ingredients.trim()) {\n      alert('Please enter some ingredients.');\n      return;\n    }\n\n    setIsLoading(true);\n    setRecipe(null); // Clear previous recipe\n\n    try {\n      const fetchedRecipe = await fetchRecipe(ingredients); // Fetch recipe from API\n      const structuredRecipe = parseRecipe(fetchedRecipe); // Parse the recipe into structured format\n      setRecipe(structuredRecipe); // Update state with the parsed recipe\n    } catch (error) {\n      setRecipe('Failed to fetch recipe. Please try again.');\n    } finally {\n      setIsLoading(false); // Set loading state back to false\n    }\n  };\n\n  const handleSaveRecipe = () => {\n    if (recipe) {\n      updateRecipes(recipe); // Save the recipe using the passed down function\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px', textAlign: 'center' }}>\n      <h1>AI Recipe Suggestions</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={ingredients}\n          onChange={(e) => setIngredients(e.target.value)}\n          placeholder=\"Enter ingredients (e.g., tomatoes, pasta)\"\n          style={{ width: '300px', padding: '10px', marginRight: '10px' }}\n        />\n        <button onClick={handleGetRecipe} disabled={isLoading} style={styles.getRecipeButton}>\n          {isLoading ? 'Generating...' : 'Get Recipe'}\n        </button>\n      </div>\n\n      {recipe && typeof recipe === 'object' && (\n        <div style={styles.recipeContainer}>\n          <h2>{recipe.name}</h2>\n          <div style={styles.recipeSection}>\n            <h3>Ingredients:</h3>\n            <ul>\n              {recipe.ingredients.map((ingredient, index) => (\n                <li key={index} style={styles.ingredient}>\n                  {ingredient}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div style={styles.recipeSection}>\n            <h3>Instructions:</h3>\n            {recipe.instructions.map((step, index) => (\n              <p key={index} style={styles.instruction}>\n                {step}\n              </p>\n            ))}\n\n\n          </div>\n          \n        </div>\n     )}\n\n      {recipe && typeof recipe === 'string' && (\n        <div style={{ marginTop: '20px', padding: '10px', background: '#ffe5b4', borderRadius: '8px' }}>\n          <h2>Recipe:</h2>\n          <p>{recipe}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Styles for AI Recipe Component\nconst styles = {\n  getRecipeButton: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#3e2723',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    margin: '10px',\n  },\n  recipeContainer: {\n    marginTop: '20px',\n    padding: '20px',\n    background: '#ffe5b4',\n    borderRadius: '10px',\n    maxWidth: '600px',\n    margin: '0 auto',\n    textAlign: 'left',\n  },\n  recipeSection: {\n    marginBottom: '15px',\n  },\n  ingredient: {\n    fontSize: '16px',\n    color: '#3e2723',\n  },\n  instruction: {\n    fontSize: '16px',\n    color: '#3e2723',\n    marginBottom: '10px',\n  },\n  saveButton: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#3e2723',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    marginTop: '20px',\n  },\n};\n\nexport default AIRecipe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}