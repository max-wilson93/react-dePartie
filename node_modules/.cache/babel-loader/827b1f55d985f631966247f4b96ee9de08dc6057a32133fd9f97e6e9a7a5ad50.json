{"ast":null,"code":"var _jsxFileName = \"/home/maxwell/de-partie/src/views/Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { encryptData } from '../utils/encryption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [newItem, setNewItem] = useState({\n    name: '',\n    quantity: 0,\n    threshold: 0\n  });\n  const addItem = () => {\n    if (newItem.name.trim() && newItem.quantity > 0 && newItem.threshold >= 0) {\n      const encryptedItem = encryptData(newItem, 'your_secret_key'); // Encrypt the item\n      setItems([...items, encryptedItem]);\n      setNewItem({\n        name: '',\n        quantity: 0,\n        threshold: 0\n      });\n    } else {\n      alert('Please fill in all fields correctly.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inventory Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newItem.name,\n        onChange: e => setNewItem({\n          ...newItem,\n          name: e.target.value\n        }),\n        placeholder: \"Item Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newItem.quantity,\n        onChange: e => setNewItem({\n          ...newItem,\n          quantity: parseInt(e.target.value)\n        }),\n        placeholder: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newItem.threshold,\n        onChange: e => setNewItem({\n          ...newItem,\n          threshold: parseInt(e.target.value)\n        }),\n        placeholder: \"Low Threshold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \": \", item.quantity, \" (Threshold: \", item.threshold, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Inventory, \"ODcA36ClwYTP9YUUf+AC0QMRyx4=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","encryptData","jsxDEV","_jsxDEV","Inventory","_s","items","setItems","newItem","setNewItem","name","quantity","threshold","addItem","trim","encryptedItem","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","parseInt","onClick","map","item","index","_c","$RefreshReg$"],"sources":["/home/maxwell/de-partie/src/views/Inventory.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { encryptData } from '../utils/encryption';\n\nconst Inventory = () => {\n  const [items, setItems] = useState([]);\n  const [newItem, setNewItem] = useState({ name: '', quantity: 0, threshold: 0 });\n\n  const addItem = () => {\n    if (newItem.name.trim() && newItem.quantity > 0 && newItem.threshold >= 0) {\n      const encryptedItem = encryptData(newItem, 'your_secret_key'); // Encrypt the item\n      setItems([...items, encryptedItem]);\n      setNewItem({ name: '', quantity: 0, threshold: 0 });\n    } else {\n      alert('Please fill in all fields correctly.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Inventory Management</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={newItem.name}\n          onChange={(e) => setNewItem({ ...newItem, name: e.target.value })}\n          placeholder=\"Item Name\"\n        />\n        <input\n          type=\"number\"\n          value={newItem.quantity}\n          onChange={(e) => setNewItem({ ...newItem, quantity: parseInt(e.target.value) })}\n          placeholder=\"Quantity\"\n        />\n        <input\n          type=\"number\"\n          value={newItem.threshold}\n          onChange={(e) => setNewItem({ ...newItem, threshold: parseInt(e.target.value) })}\n          placeholder=\"Low Threshold\"\n        />\n        <button onClick={addItem}>Add Item</button>\n      </div>\n      <ul>\n        {items.map((item, index) => (\n          <li key={index}>\n            {item.name}: {item.quantity} (Threshold: {item.threshold})\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Inventory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}