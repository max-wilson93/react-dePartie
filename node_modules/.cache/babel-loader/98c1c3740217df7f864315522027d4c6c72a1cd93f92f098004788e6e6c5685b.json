{"ast":null,"code":"// src/services/firebaseAuth.js\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\n// Firebase Authentication functions\n\n// Sign Up function\nexport const signUp = async (email, password) => {\n  try {\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\n  } catch (error) {\n    console.error(\"Error signing up:\", error);\n    throw error; // Optional: You can throw the error to handle it in your component\n  }\n};\n\n// Sign In function\nexport const signIn = async (email, password) => {\n  try {\n    await firebase.auth().signInWithEmailAndPassword(email, password);\n  } catch (error) {\n    console.error(\"Error signing in:\", error);\n    throw error; // Optional: You can throw the error to handle it in your component\n  }\n};\n\n// Sign Out function\nexport const signOut = async () => {\n  try {\n    await firebase.auth().signOut();\n  } catch (error) {\n    console.error(\"Error signing out:\", error);\n    throw error; // Optional: You can throw the error to handle it in your component\n  }\n};\n\n// Get current user (if logged in)\nexport const getCurrentUser = () => {\n  return firebase.auth().currentUser;\n};\n\n// Listen for auth state changes\nexport const onAuthStateChanged = callback => {\n  firebase.auth().onAuthStateChanged(callback);\n};","map":{"version":3,"names":["firebase","signUp","email","password","auth","createUserWithEmailAndPassword","error","console","signIn","signInWithEmailAndPassword","signOut","getCurrentUser","currentUser","onAuthStateChanged","callback"],"sources":["/home/maxwell/de-partie/src/services/firebaseAuth.js"],"sourcesContent":["// src/services/firebaseAuth.js\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\n// Firebase Authentication functions\n\n// Sign Up function\nexport const signUp = async (email, password) => {\n  try {\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\n  } catch (error) {\n    console.error(\"Error signing up:\", error);\n    throw error; // Optional: You can throw the error to handle it in your component\n  }\n};\n\n// Sign In function\nexport const signIn = async (email, password) => {\n  try {\n    await firebase.auth().signInWithEmailAndPassword(email, password);\n  } catch (error) {\n    console.error(\"Error signing in:\", error);\n    throw error; // Optional: You can throw the error to handle it in your component\n  }\n};\n\n// Sign Out function\nexport const signOut = async () => {\n  try {\n    await firebase.auth().signOut();\n  } catch (error) {\n    console.error(\"Error signing out:\", error);\n    throw error; // Optional: You can throw the error to handle it in your component\n  }\n};\n\n// Get current user (if logged in)\nexport const getCurrentUser = () => {\n  return firebase.auth().currentUser;\n};\n\n// Listen for auth state changes\nexport const onAuthStateChanged = (callback) => {\n  firebase.auth().onAuthStateChanged(callback);\n};\n"],"mappings":"AAAA;;AAEA,OAAOA,QAAQ,MAAM,cAAc;AACnC,OAAO,eAAe;;AAEtB;;AAEA;AACA,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACF,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,8BAA8B,CAACH,KAAK,EAAEC,QAAQ,CAAC;EACvE,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAME,MAAM,GAAG,MAAAA,CAAON,KAAK,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACF,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACK,0BAA0B,CAACP,KAAK,EAAEC,QAAQ,CAAC;EACnE,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,OAAO,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMV,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACM,OAAO,CAAC,CAAC;EACjC,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOX,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACQ,WAAW;AACpC,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EAC9Cd,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACS,kBAAkB,CAACC,QAAQ,CAAC;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}