{"ast":null,"code":"// firebaseAuth.js\nimport { initializeApp } from 'firebase/app'; // Import initializeApp\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth'; // Import necessary auth functions\n\n// Firebase config object (replace with your Firebase project config)\nconst firebaseConfig = {\n  apiKey: 'your-api-key',\n  authDomain: 'your-auth-domain',\n  projectId: 'your-project-id',\n  storageBucket: 'your-storage-bucket',\n  messagingSenderId: 'your-messaging-sender-id',\n  appId: 'your-app-id'\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Get the Auth instance\nconst auth = getAuth(app);\n\n// Sign in with email and password\nexport const signIn = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error.message);\n  }\n};\n\n// Create a new user\nexport const signUp = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error.message);\n  }\n};\n\n// Sign out the user\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error(error);\n    throw new Error(error.message);\n  }\n};\n\n// Set up a listener for auth state changes (e.g., when user signs in/out)\nexport const onAuthStateChangedListener = callback => {\n  onAuthStateChanged(auth, callback);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","signIn","email","password","userCredential","user","error","console","Error","message","signUp","signOutUser","onAuthStateChangedListener","callback"],"sources":["/home/maxwell/de-partie/src/services/firebaseAuth.js"],"sourcesContent":["// firebaseAuth.js\nimport { initializeApp } from 'firebase/app'; // Import initializeApp\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth'; // Import necessary auth functions\n\n// Firebase config object (replace with your Firebase project config)\nconst firebaseConfig = {\n  apiKey: 'your-api-key',\n  authDomain: 'your-auth-domain',\n  projectId: 'your-project-id',\n  storageBucket: 'your-storage-bucket',\n  messagingSenderId: 'your-messaging-sender-id',\n  appId: 'your-app-id'\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Get the Auth instance\nconst auth = getAuth(app);\n\n// Sign in with email and password\nexport const signIn = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error.message);\n  }\n};\n\n// Create a new user\nexport const signUp = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error.message);\n  }\n};\n\n// Sign out the user\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error(error);\n    throw new Error(error.message);\n  }\n};\n\n// Set up a listener for auth state changes (e.g., when user signs in/out)\nexport const onAuthStateChangedListener = (callback) => {\n  onAuthStateChanged(auth, callback);\n};\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc,CAAC,CAAC;AAC9C,SAASC,OAAO,EAAEC,0BAA0B,EAAEC,8BAA8B,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe,CAAC,CAAC;;AAElI;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,cAAc;EACtBC,UAAU,EAAE,kBAAkB;EAC9BC,SAAS,EAAE,iBAAiB;EAC5BC,aAAa,EAAE,qBAAqB;EACpCC,iBAAiB,EAAE,0BAA0B;EAC7CC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGb,aAAa,CAACM,cAAc,CAAC;;AAEzC;AACA,MAAMQ,IAAI,GAAGb,OAAO,CAACY,GAAG,CAAC;;AAEzB;AACA,OAAO,MAAME,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMhB,0BAA0B,CAACY,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;IAC9E,OAAOC,cAAc,CAACC,IAAI;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;EAChC;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOR,KAAK,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMf,8BAA8B,CAACW,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;IAClF,OAAOC,cAAc,CAACC,IAAI;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;EAChC;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMrB,OAAO,CAACU,IAAI,CAAC;EACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;EAChC;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,0BAA0B,GAAIC,QAAQ,IAAK;EACtDtB,kBAAkB,CAACS,IAAI,EAAEa,QAAQ,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}